<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.wikidata.query.rdf</groupId>
        <artifactId>query-service-parent</artifactId>
        <version>0.3.107</version>
    </parent>
    <artifactId>rdf-spark-tools</artifactId>
    <packaging>jar</packaging>
    <description>Tools to manipulate wikibase RDF dumps using spark.</description>
    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <!-- pom credits:
      inspired from https://github.com/martinprobson/Spark-Scala-Maven-Example
      and https://gerrit.wikimedia.org/g/analytics/refinery/source
      -->
    <properties>
        <!-- Spark 2 2.6.7.1, force this version to make sure we test with the same version that will be used at runtime. -->
        <jackson.version>2.6.7.1</jackson.version>
    </properties>
    <dependencies>
        <!-- Scala lang, spark core and spark sql are all
             scoped as provided as spark-submit will provide these -->
        <dependency>
            <groupId>com.github.scopt</groupId>
            <artifactId>scopt_${scala.compat.version}</artifactId>
        </dependency>
        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.jena</groupId>
            <artifactId>jena-arq</artifactId>
            <exclusions>
                <!-- exclude jackson to use the one provided by spark -->
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.clapper</groupId>
            <artifactId>grizzled-slf4j_${scala.compat.version}</artifactId>
        </dependency>
        <dependency>
            <groupId>org.openrdf.sesame</groupId>
            <artifactId>sesame-rio-ntriples</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wikidata.query.rdf</groupId>
            <artifactId>tools</artifactId>
            <version>${project.version}</version>
            <exclusions>
                <!-- exclude jackson to use the one provided by spark (keep jsr310 for datetime) -->
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-annotations</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.kafka</groupId>
                    <artifactId>kafka-clients</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.wikimedia</groupId>
            <artifactId>eventutilities</artifactId>
            <exclusions>
                <!-- exclude jackson to use the one provided by spark -->
                <exclusion>
                    <groupId>com.fasterxml.jackson.datatype</groupId>
                    <artifactId>jackson-datatype-jsr310</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-annotations</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.kafka</groupId>
                    <artifactId>kafka-clients</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-common</artifactId>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.sun.jersey</groupId>
                    <artifactId>jersey-json</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_${scala.compat.version}</artifactId>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>javax.activation</groupId>
                    <artifactId>activation</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.annotation</groupId>
                    <artifactId>javax.annotation-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.ws.rs</groupId>
                    <artifactId>javax.ws.rs-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.xml.bind</groupId>
                    <artifactId>jaxb-api</artifactId>
                </exclusion>
                <!-- spark included version is breaking builds on newer JDKs than 8 -->
                <exclusion>
                    <groupId>org.apache.xbean</groupId>
                    <artifactId>xbean-asm6-shaded</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_${scala.compat.version}</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.xbean</groupId>
            <artifactId>xbean-asm6-shaded</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Test Scopes -->
        <!-- we need to force a very old version of guava
             as the version of hadoop we use depends on such
             version
             c.f. https://stackoverflow.com/questions/36427291/illegalaccesserror-to-guavas-stopwatch-from-org-apache-hadoop-mapreduce-lib-inp
         -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>15.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.scalamock</groupId>
            <artifactId>scalamock_${scala.compat.version}</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.compat.version}</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <repositories>
        <repository>
            <id>artima</id>
            <url>http://repo.artima.com/releases/</url>
        </repository>
    </repositories>
    <build>
        <plugins>
            <plugin>
                <!-- see http://davidb.github.com/scala-maven-plugin -->
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>${scala.scala-maven-plugin.version}</version>
                <configuration>
                    <compilerPlugins>
                        <compilerPlugin>
                            <groupId>com.artima.supersafe</groupId>
                            <artifactId>supersafe_${scala.version}</artifactId>
                            <version>${scala.supersafe.version}</version>
                        </compilerPlugin>
                    </compilerPlugins>
                    <args>
                        <arg>-Xfatal-warnings</arg>
                        <arg>-unchecked</arg>
                        <arg>-Ywarn-unused</arg>
                        <arg>-Ywarn-unused-import</arg>
                        <arg>-feature</arg>
                        <arg>-deprecation</arg>
                        <arg>-dependencyfile</arg>
                        <arg>-target:jvm-1.8</arg>
                        <arg>${project.build.directory}/.scala_dependencies</arg>
                    </args>
                    <secondaryCacheDir>${project.build.directory}/sbt_1.0_zinc_org.scala-sbt</secondaryCacheDir>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>jar-with-dependencies</id>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies-spi-compliant</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- disable surefire -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <useFile>false</useFile>
                    <disableXmlReport>true</disableXmlReport>
                    <includes>
                        <include>**/*Test.*</include>
                        <include>**/*Suite.*</include>
                    </includes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.basepom.maven</groupId>
                <artifactId>duplicate-finder-maven-plugin</artifactId>
                <configuration>
                    <ignoredClassPatterns>
                        <ignoredClassPattern>org.apache.spark.unused.UnusedStubClass</ignoredClassPattern>
                    </ignoredClassPatterns>
                    <ignoredResourcePatterns>
                        <ignoredResourcePattern>git.properties</ignoredResourcePattern>
                    </ignoredResourcePatterns>
                    <ignoredDependencies>
                        <!--
                            the following dependencies are problematic but non trivial to
                            clean, it will come in a second time...
                          -->
                        <dependency>
                            <groupId>commons-logging</groupId>
                            <artifactId>commons-logging</artifactId>
                        </dependency>
                        <dependency>
                            <groupId>commons-beanutils</groupId>
                            <artifactId>commons-beanutils-core</artifactId>
                        </dependency>
                        <dependency>
                            <groupId>commons-beanutils</groupId>
                            <artifactId>commons-beanutils</artifactId>
                        </dependency>
                        <dependency>
                            <groupId>org.glassfish.hk2.external</groupId>
                            <artifactId>aopalliance-repackaged</artifactId>
                        </dependency>
                        <dependency>
                            <groupId>org.glassfish.hk2.external</groupId>
                            <artifactId>javax.inject</artifactId>
                        </dependency>
                        <dependency>
                            <groupId>org.glassfish.jersey.core</groupId>
                            <artifactId>jersey-server</artifactId>
                        </dependency>
                        <dependency>
                            <groupId>xml-apis</groupId>
                            <artifactId>xml-apis</artifactId>
                        </dependency>
                        <dependency>
                            <groupId>javax.servlet</groupId>
                            <artifactId>servlet-api</artifactId>
                        </dependency>
                        <dependency>
                            <groupId>com.sun.jersey</groupId>
                            <artifactId>jersey-core</artifactId>
                        </dependency>
                        <dependency>
                            <!-- spark core has log4j12 but need logback because
                                 of common. Silence the checker for now time
                                 to figure out if spark complains at runtime
                                 -->
                            <groupId>org.slf4j</groupId>
                            <artifactId>slf4j-log4j12</artifactId>
                        </dependency>
                        <dependency>
                            <!-- dup of rootdoc.txt with org.scala-lang:scala-compiler:2.11.0 -->
                            <groupId>org.scala-lang</groupId>
                            <artifactId>scala-library</artifactId>
                        </dependency>
                        <dependency>
                            <!-- dup of some .package-info with org.apache.hadoop:hadoop-yarn-common:2.2.0 -->
                            <groupId>org.apache.hadoop</groupId>
                            <artifactId>hadoop-yarn-api</artifactId>
                        </dependency>
                    </ignoredDependencies>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.scalastyle</groupId>
                <artifactId>scalastyle-maven-plugin</artifactId>
            </plugin>
            <!-- enable scalatest -->
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
                <version>${scala.scalatest-maven-plugin.version}</version>
                <configuration>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                    <junitxml>.</junitxml>
                    <filereports>WDF TestSuite.txt</filereports>
                </configuration>
                <executions>
                    <execution>
                        <id>test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <sourceDirectory>src/main/scala</sourceDirectory>
        <testSourceDirectory>src/test/scala</testSourceDirectory>
    </build>
</project>
